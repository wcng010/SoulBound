//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Settings/Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player"",
    ""maps"": [
        {
            ""name"": ""Gameplay"",
            ""id"": ""1d60617b-9d6d-4d8b-974f-7e4f885d90bf"",
            ""actions"": [
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""09b57423-a270-4c30-bd70-cc34b7ca47a9"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""0f9d76e3-7a4e-4d5f-851a-b6b267db8877"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Roll/Slide"",
                    ""type"": ""Button"",
                    ""id"": ""ee8c4c69-67eb-4e6d-b014-3691699bc132"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Dash"",
                    ""type"": ""Button"",
                    ""id"": ""27e4504b-4984-4ca0-b4a5-0a9d03a9083d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""726bea11-c4b5-46d7-ab92-51e4954f04f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WaterWaveSkill"",
                    ""type"": ""Button"",
                    ""id"": ""d1dc31a4-af44-461b-b853-0e8a39fd4458"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WaterBlastSkill"",
                    ""type"": ""Button"",
                    ""id"": ""a1b4bb8d-df34-4d07-828f-64c00b4d7235"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RecoverBlood"",
                    ""type"": ""Button"",
                    ""id"": ""89be0023-221e-490e-877d-70a4d6d429d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BigFall"",
                    ""type"": ""Button"",
                    ""id"": ""da7a460e-abe4-432b-8fa0-bd49adf6b4bd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Esc"",
                    ""type"": ""Button"",
                    ""id"": ""3a26e1db-740e-47ef-a107-eeff3c79f128"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Instructions"",
                    ""type"": ""Button"",
                    ""id"": ""cc29acb1-0fdc-419d-924c-3716b8c66dcd"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""8084ff11-f5be-49ba-b375-cf376afd1417"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": ""StickDeadzone"",
                    ""groups"": ""Gamepad;Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""c15d6ca9-0e71-4532-88a9-d8591ab9cdf2"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1ef6c8de-3eb6-44e7-904e-caad823a1a6f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8cdd185c-2a23-471c-b6a3-ec07c731e857"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""592ca4cd-bd2f-401f-bbe7-503fd78474d7"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""1f20df1c-1170-4055-900c-75ce4e7a409c"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7a8a9db6-9b31-498c-ad1e-c541d91d3e1e"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""93b4a2e3-0f49-471d-ae5a-6abca93bb47a"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""830286df-cc89-43d3-a545-72a6196004da"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Roll/Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5839750a-1389-46bd-b465-7d983a55fe5f"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Roll/Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""84464181-506c-48cd-8c55-53c8c5d42f4e"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fcaf1fbc-c936-4f1d-a571-c75dd9212be4"",
                    ""path"": ""<Gamepad>/rightShoulder"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Dash"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f1306478-882e-4a3c-adb4-6fd5d4a02723"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Keyboard"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dde36248-d2fa-403b-9074-5cd2748ead87"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""Gamepad"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""284512a4-ae7c-45ce-bca1-de0d5ab0483e"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterWaveSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f00bc823-4b82-4422-b8c0-9924658bb898"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""RecoverBlood"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b727ba48-4998-4a02-9e7a-4ade7e9e65c7"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WaterBlastSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d9e52fc9-7a35-4578-828c-4c88a1f997f0"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""BigFall"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01ebbd8b-2da8-493f-aa63-fd3fc4688f6f"",
                    ""path"": ""<Keyboard>/escape"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Esc"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""75eb5c5b-b59c-4bfe-b5e9-566cff877251"",
                    ""path"": ""<Keyboard>/p"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Instructions"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""Keyboard"",
            ""bindingGroup"": ""Keyboard"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""Gamepad"",
            ""bindingGroup"": ""Gamepad"",
            ""devices"": [
                {
                    ""devicePath"": ""<Gamepad>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Gameplay
        m_Gameplay = asset.FindActionMap("Gameplay", throwIfNotFound: true);
        m_Gameplay_Movement = m_Gameplay.FindAction("Movement", throwIfNotFound: true);
        m_Gameplay_Jump = m_Gameplay.FindAction("Jump", throwIfNotFound: true);
        m_Gameplay_RollSlide = m_Gameplay.FindAction("Roll/Slide", throwIfNotFound: true);
        m_Gameplay_Dash = m_Gameplay.FindAction("Dash", throwIfNotFound: true);
        m_Gameplay_Attack = m_Gameplay.FindAction("Attack", throwIfNotFound: true);
        m_Gameplay_WaterWaveSkill = m_Gameplay.FindAction("WaterWaveSkill", throwIfNotFound: true);
        m_Gameplay_WaterBlastSkill = m_Gameplay.FindAction("WaterBlastSkill", throwIfNotFound: true);
        m_Gameplay_RecoverBlood = m_Gameplay.FindAction("RecoverBlood", throwIfNotFound: true);
        m_Gameplay_BigFall = m_Gameplay.FindAction("BigFall", throwIfNotFound: true);
        m_Gameplay_Esc = m_Gameplay.FindAction("Esc", throwIfNotFound: true);
        m_Gameplay_Instructions = m_Gameplay.FindAction("Instructions", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Gameplay
    private readonly InputActionMap m_Gameplay;
    private IGameplayActions m_GameplayActionsCallbackInterface;
    private readonly InputAction m_Gameplay_Movement;
    private readonly InputAction m_Gameplay_Jump;
    private readonly InputAction m_Gameplay_RollSlide;
    private readonly InputAction m_Gameplay_Dash;
    private readonly InputAction m_Gameplay_Attack;
    private readonly InputAction m_Gameplay_WaterWaveSkill;
    private readonly InputAction m_Gameplay_WaterBlastSkill;
    private readonly InputAction m_Gameplay_RecoverBlood;
    private readonly InputAction m_Gameplay_BigFall;
    private readonly InputAction m_Gameplay_Esc;
    private readonly InputAction m_Gameplay_Instructions;
    public struct GameplayActions
    {
        private @Player m_Wrapper;
        public GameplayActions(@Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @Movement => m_Wrapper.m_Gameplay_Movement;
        public InputAction @Jump => m_Wrapper.m_Gameplay_Jump;
        public InputAction @RollSlide => m_Wrapper.m_Gameplay_RollSlide;
        public InputAction @Dash => m_Wrapper.m_Gameplay_Dash;
        public InputAction @Attack => m_Wrapper.m_Gameplay_Attack;
        public InputAction @WaterWaveSkill => m_Wrapper.m_Gameplay_WaterWaveSkill;
        public InputAction @WaterBlastSkill => m_Wrapper.m_Gameplay_WaterBlastSkill;
        public InputAction @RecoverBlood => m_Wrapper.m_Gameplay_RecoverBlood;
        public InputAction @BigFall => m_Wrapper.m_Gameplay_BigFall;
        public InputAction @Esc => m_Wrapper.m_Gameplay_Esc;
        public InputAction @Instructions => m_Wrapper.m_Gameplay_Instructions;
        public InputActionMap Get() { return m_Wrapper.m_Gameplay; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GameplayActions set) { return set.Get(); }
        public void SetCallbacks(IGameplayActions instance)
        {
            if (m_Wrapper.m_GameplayActionsCallbackInterface != null)
            {
                @Movement.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnMovement;
                @Jump.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnJump;
                @RollSlide.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRollSlide;
                @RollSlide.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRollSlide;
                @RollSlide.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRollSlide;
                @Dash.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @Dash.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @Dash.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnDash;
                @Attack.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                @Attack.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                @Attack.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnAttack;
                @WaterWaveSkill.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWaterWaveSkill;
                @WaterWaveSkill.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWaterWaveSkill;
                @WaterWaveSkill.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWaterWaveSkill;
                @WaterBlastSkill.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWaterBlastSkill;
                @WaterBlastSkill.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWaterBlastSkill;
                @WaterBlastSkill.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnWaterBlastSkill;
                @RecoverBlood.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRecoverBlood;
                @RecoverBlood.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRecoverBlood;
                @RecoverBlood.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnRecoverBlood;
                @BigFall.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBigFall;
                @BigFall.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBigFall;
                @BigFall.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnBigFall;
                @Esc.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEsc;
                @Esc.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEsc;
                @Esc.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnEsc;
                @Instructions.started -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInstructions;
                @Instructions.performed -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInstructions;
                @Instructions.canceled -= m_Wrapper.m_GameplayActionsCallbackInterface.OnInstructions;
            }
            m_Wrapper.m_GameplayActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @RollSlide.started += instance.OnRollSlide;
                @RollSlide.performed += instance.OnRollSlide;
                @RollSlide.canceled += instance.OnRollSlide;
                @Dash.started += instance.OnDash;
                @Dash.performed += instance.OnDash;
                @Dash.canceled += instance.OnDash;
                @Attack.started += instance.OnAttack;
                @Attack.performed += instance.OnAttack;
                @Attack.canceled += instance.OnAttack;
                @WaterWaveSkill.started += instance.OnWaterWaveSkill;
                @WaterWaveSkill.performed += instance.OnWaterWaveSkill;
                @WaterWaveSkill.canceled += instance.OnWaterWaveSkill;
                @WaterBlastSkill.started += instance.OnWaterBlastSkill;
                @WaterBlastSkill.performed += instance.OnWaterBlastSkill;
                @WaterBlastSkill.canceled += instance.OnWaterBlastSkill;
                @RecoverBlood.started += instance.OnRecoverBlood;
                @RecoverBlood.performed += instance.OnRecoverBlood;
                @RecoverBlood.canceled += instance.OnRecoverBlood;
                @BigFall.started += instance.OnBigFall;
                @BigFall.performed += instance.OnBigFall;
                @BigFall.canceled += instance.OnBigFall;
                @Esc.started += instance.OnEsc;
                @Esc.performed += instance.OnEsc;
                @Esc.canceled += instance.OnEsc;
                @Instructions.started += instance.OnInstructions;
                @Instructions.performed += instance.OnInstructions;
                @Instructions.canceled += instance.OnInstructions;
            }
        }
    }
    public GameplayActions @Gameplay => new GameplayActions(this);
    private int m_KeyboardSchemeIndex = -1;
    public InputControlScheme KeyboardScheme
    {
        get
        {
            if (m_KeyboardSchemeIndex == -1) m_KeyboardSchemeIndex = asset.FindControlSchemeIndex("Keyboard");
            return asset.controlSchemes[m_KeyboardSchemeIndex];
        }
    }
    private int m_GamepadSchemeIndex = -1;
    public InputControlScheme GamepadScheme
    {
        get
        {
            if (m_GamepadSchemeIndex == -1) m_GamepadSchemeIndex = asset.FindControlSchemeIndex("Gamepad");
            return asset.controlSchemes[m_GamepadSchemeIndex];
        }
    }
    public interface IGameplayActions
    {
        void OnMovement(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnRollSlide(InputAction.CallbackContext context);
        void OnDash(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnWaterWaveSkill(InputAction.CallbackContext context);
        void OnWaterBlastSkill(InputAction.CallbackContext context);
        void OnRecoverBlood(InputAction.CallbackContext context);
        void OnBigFall(InputAction.CallbackContext context);
        void OnEsc(InputAction.CallbackContext context);
        void OnInstructions(InputAction.CallbackContext context);
    }
}
